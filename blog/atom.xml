<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://oclif.github.io/blog</id>
    <title>oclif: The Open CLI Framework Blog</title>
    <updated>2019-10-31T06:00:00Z</updated>
    <generator>Feed for Node.js</generator>
    <link rel="alternate" href="https://oclif.github.io/blog"/>
    <subtitle>The best place to stay up-to-date with the latest oclif: The Open CLI Framework news and events.</subtitle>
    <logo>https://oclif.github.io/img/oclif_rev.svg</logo>
    <rights>Copyright © 2019 Salesforce.com</rights>
    <entry>
        <title type="html"><![CDATA[oclif's Current Node Support]]></title>
        <id>https://oclif.github.io/blog/2019/10/31/oclif-node-updates.html</id>
        <link href="https://oclif.github.io/blog/2019/10/31/oclif-node-updates.html">
        </link>
        <updated>2019-10-31T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p>To maintain a healthy project trajectory, oclif follows and supports <a href="https://nodejs.org/en/about/releases/">Node Active LTS release</a>, currently Node 10 &amp; Node 12. This means ensuring that oclif continues to play nice with coming Active LTS Node versions and other packages in the ecosys...</p>]]></summary>
        <author>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[oclifconf 2019: A Recap]]></title>
        <id>https://oclif.github.io/blog/2019/09/16/oclifconf-recap.html</id>
        <link href="https://oclif.github.io/blog/2019/09/16/oclifconf-recap.html">
        </link>
        <updated>2019-09-16T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p>In May, Heroku and Salesforce Open Source organized <a href="https://oclif.io/conf">oclifconf</a>, a conference for developers &amp; product managers building CLI tools on top of <a href="https://github.com/oclif/oclif">the open source oclif framework</a>. The speakers came from various tech companies, such as Adobe, Netlify, and ...</p>]]></summary>
        <author>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CLI Flags Explained]]></title>
        <id>https://oclif.github.io/blog/2019/02/20/cli-flags-explained.html</id>
        <link href="https://oclif.github.io/blog/2019/02/20/cli-flags-explained.html">
        </link>
        <updated>2019-02-20T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p><code>oclif</code> makes it easy to create a command line interface (CLI) in node. Most commands have <strong>parameters</strong> — also known as &quot;flags&quot;, &quot;args&quot;, and sometimes &quot;options&quot;. This blog post explains what these parameters are and when to ...</p>]]></summary>
        <author>
            <name>Casey Watts and Jeff Dickey</name>
            <uri>https://twitter.com/kyloma</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing oclif]]></title>
        <id>https://oclif.github.io/blog/2018/03/20/introducing-oclif.html</id>
        <link href="https://oclif.github.io/blog/2018/03/20/introducing-oclif.html">
        </link>
        <updated>2018-03-20T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p><img src="/img/2018-03-20-introducing-oclif/header.png" alt="Introducing oclif"></p> <p>Coding for the browser takes serious time. You need to deal with front-end JS, CSS, design, product, and a ton more. On the other hand, building for a CLI takes a fraction of the effort. This makes CLIs particularly great for prototyping out new fun...</p>]]></summary>
        <author>
            <name>Jeff Dickey</name>
            <uri>https://twitter.com/jdxcode</uri>
        </author>
    </entry>
</feed>